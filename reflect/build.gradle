import java.text.SimpleDateFormat

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'me.champeau.jmh' version '0.7.1'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    compileJava.options.encoding('UTF-8')
    withJavadocJar()
    withSourcesJar()
}

group = 'io.github.amayaframework'
archivesBaseName = 'amaya-di-reflect'
version = System.getenv('DI_REFLECT_VERSION') ?: '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    // Tests
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'
    // Benchmarks
    jmhImplementation group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.35'
    jmhImplementation group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.35'
    // Dependencies
    // TODO
    /*compileOnly*/implementation project(':core')
    /*compileOnly*/implementation project(':schema')
    /*compileOnly*/implementation project(':stub')
    api group: 'com.github.romanqed', name: 'jeflect-cloner', version: '1.0.0'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        var date = new Date()
        var javaVersion = System.getProperty("java.version")
        var vmVendor = System.getProperty("java.vm.vendor")
        var vmVersion = System.getProperty("java.vm.version")

        attributes(
                'Created-By': String.format("%s (%s %s)", javaVersion, vmVendor, vmVersion),
                'Gradle-Version': "Gradle $gradle.gradleVersion",
                'Build-Date': new SimpleDateFormat("yyyy-MM-dd").format(date),
                'Build-Time': new SimpleDateFormat("HH:mm:ss.SSSZ").format(date),
                'Built-By': 'Roman Bakaldin',
                'Bundle-Name': 'Amaya DI Reflect',
                'Bundle-Version': archiveVersion,
                'Bundle-SymbolicName': archivesBaseName,
                'Implementation-Title': archivesBaseName,
                'Implementation-Vendor': 'github.com/amayaframework',
                'Implementation-Version': archiveVersion,
                'Specification-Title': archivesBaseName,
                'Specification-Vendor': 'github.com/amayaframework',
                'Specification-Version': archiveVersion
        )
    }
}

signing {
    sign publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // Specify artifacts
            artifactId = archivesBaseName
            groupId = group
            version = version
            from components.java
            // Configure pom
            pom {
                name.set(archivesBaseName)
                description.set('Amaya DI Reflect')
                url.set('https://github.com/AmayaFramework/amaya-di')

                organization {
                    name.set('io.github.amayaframework')
                    url.set('https://github.com/AmayaFramework')
                }

                issueManagement {
                    system.set('GitHub')
                    url.set('https://github.com/AmayaFramework/amaya-di/issues')
                }

                licenses {
                    license {
                        name.set('Apache License 2.0')
                        url.set('https://github.com/AmayaFramework/amaya-di/blob/main/LICENSE')
                    }
                }

                scm {
                    url.set('https://github.com/AmayaFramework/amaya-di')
                    connection.set('scm:https://github.com/AmayaFramework/amaya-di.git')
                    developerConnection.set('scm:https://github.com/AmayaFramework/amaya-di.git')
                }

                developers {
                    developer {
                        id.set('RomanQed')
                        name.set('Roman Bakaldin')
                        email.set('gbakaldin@gmail.com')
                    }
                }
            }
        }
    }
}
